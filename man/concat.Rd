% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/concat.R
\name{concat}
\alias{concat}
\alias{concat.default}
\alias{concat.iteror}
\title{Concatenate contents of multiple iterators into a vector.}
\usage{
concat(obj, mode = "list", n = as.integer(2^31 - 1), ...)

\method{concat}{default}(obj, mode = "list", n = as.integer(2^31 - 1), ...)

\method{concat}{iteror}(obj, mode = "list", n = Inf, length.out = Inf, ...)
}
\arguments{
\item{obj}{An iteror.}

\item{mode}{The mode of vector to return.}

\item{n}{The maximum number of input elements to extract from the
iteror.}

\item{...}{passed along to \link{iteror} constructor.}

\item{length.out}{The approximate size of the output vector (after
elements have been pasted together). If the iteror ends (or emits
N elements) before emitting this many, the result. If the
iterator does not end early the output will have at least
\code{length.out} elements (depending on how large the last chunk
was.)}
}
\description{
\code{concat} collects all values from an iterable object, and pastes
them end to end into one vector.  In other words \code{concat} is to
\code{as.list.iteror} as \code{c} is to \code{list}.
}
\examples{

it <- iapply(icount(), seq_len) # [1], [1, 2], [1, 2, 3], ...
concat(it, n=4, mode="numeric")  # [1, 1, 2, 1, 2, 3, 1, 2, 3, 4]
}
