% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/igrid.R
\name{igrid}
\alias{igrid}
\alias{iproduct}
\title{Iterator that returns the Cartesian product of the arguments.}
\usage{
igrid(...)
}
\arguments{
\item{\dots}{Named iterables to iterate over. The right-most
iterables change more quickly, like an odometer.}
}
\value{
iterator that iterates through each element from the
Cartesian product.
}
\description{
Given a number of iterables as arguments, constructs an iterator that
is the Cartesian product of all arguments.
}
\details{
Although they share the same end goal, \code{igrid} can yield drastic
memory savings compared to \code{\link[base]{expand.grid}}.

Based on \link[itertools2:iproduct]{itertools2::iproduct} and
\link[itertools:product]{itertools::product}
}
\examples{
# Simulate a doubly-nested loop with a single while loop
it <- product(a=1:3, b=1:2)
repeat {
  x <- nextOr(it, break)
  cat(sprintf('a = \%d, b = \%d\n', x$a, x$b))
}

it <- igrid(x=1:3, y=4:5)
nextOr(it, NA) # list(x=1, y=4)
nextOr(it, NA) # list(x=1, y=5)
nextOr(it, NA) # list(x=2, y=4)
nextOr(it, NA) # list(x=2, y=5)
nextOr(it, NA) # list(x=3, y=4)
nextOr(it, NA) # list(x=3, y=5)

# Second Cartesian product
nextOr(it, NA) # list(x=1, y=4)
nextOr(it, NA) # list(x=1, y=5)
nextOr(it, NA) # list(x=2, y=4)
nextOr(it, NA) # list(x=2, y=5)
nextOr(it, NA) # list(x=3, y=4)
nextOr(it, NA) # list(x=3, y=5)

# igrid is a replacement for base::expand.grid()
# Large data.frames are not created unless the iterator is manually consumed
a <- 1:2
b <- 3:4
c <- 5:6
it3 <- igrid(a=a, b=b, c=c)
df_igrid <- do.call(rbind, as.list(it3))
df_igrid <- data.frame(df_igrid)

# Compare df_igrid with the results from base::expand.grid()
base::expand.grid(a=a, b=b, c=c)
}
