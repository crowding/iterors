% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/icollect.R
\name{collect}
\alias{collect}
\alias{collect.default}
\alias{collect.iteror}
\alias{as.list.iteror}
\alias{as.double.iteror}
\alias{as.numeric.iteror}
\alias{as.logical.iteror}
\alias{as.character.iteror}
\alias{as.vector.iteror}
\title{Collect all values from an iterable object}
\usage{
collect(x, ...)

\method{collect}{default}(x, mode = "list", n = as.integer(2^31 - 1), collapse = FALSE, ...)

\method{collect}{iteror}(x, mode = "list", n = as.integer(2^31 - 1), collapse = FALSE, ...)

\method{as.list}{iteror}(x, n = as.integer(2^31 - 1), ..., collapse = FALSE)

\method{as.double}{iteror}(x, n = as.integer(2^31 - 1), ..., collapse = FALSE)

\method{as.numeric}{iteror}(x, n = as.integer(2^31 - 1), ..., collapse = FALSE)

\method{as.logical}{iteror}(x, n = as.integer(2^31 - 1), ..., collapse = FALSE)

\method{as.character}{iteror}(x, n = as.integer(2^31 - 1), ..., collapse = FALSE)

\method{as.vector}{iteror}(x, mode)
}
\arguments{
\item{x}{an iterable object}

\item{...}{passed along to \link{iteror} constructor.}

\item{mode}{What mode to use for the output vector.}

\item{n}{the number of elements to return.}

\item{collapse}{If \code{FALSE}, the iteror should return a single
element per call, and the returned vector will have as many
elments as there were iterations. If \code{TRUE} the iteror may emit
a varying-length vector per iteration, and the returned value
will be the concatenation of those vectors.}
}
\value{
The returned value will be \code{n} elements long if the
iterator did not stop. If \code{collapse=TRUE} the returned value may
be longer than \code{n} depending on how long the last chunk was.
}
\description{
Collect all values from an iterable object

\code{collect} collects all (or some given number of) values from
an iteror and returns them in a vector of the given type.
}
