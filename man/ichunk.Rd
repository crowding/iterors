% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ichunk.r
\name{ichunk}
\alias{ichunk}
\title{Iterator that returns elements in fixed-length chunks}
\usage{
ichunk(object, chunk_size = 1, fill = NA)
}
\arguments{
\item{object}{an iterable object}

\item{chunk_size}{the number of elements returned per chunk}

\item{fill}{the value with which to fill the last chunk if the length of the
iterator is not divisble by \code{chunk_size}}
}
\value{
each call to \code{nextElem} results in a list of length
\code{chunk_size}
}
\description{
Constructs an iterator that returns elements of an iterable \code{object} in
fixed-length chunks. If the length of the iterator is not divisible by
\code{chunk_size}, the remainder of the last block is filled with the value
specified in \code{fill}.
}
\details{
This function corresponds to Python's \code{grouper} function. We chose the
name \code{ichunk} because it more explicitly defines the function's purpose.
}
\examples{
it <- ichunk(iterators::iter(1:5), chunk_size=2)
# List: list(1, 2, 3)
nextOr(it, NA)
# List: list(4, 5, NA)
nextOr(it, NA)

it2 <- ichunk(levels(iris$Species), chunk_size=4, "weeee")
# Returns: list("setosa", "versicolor", "virginica", "weeee")
nextOr(it2, NA)

}
